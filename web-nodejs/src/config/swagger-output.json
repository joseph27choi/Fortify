{
  "swagger": "2.0",
  "info": {
    "title": "Documentation",
    "description": "API Documentation",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "in": "header",
      "bearerFormat": "JWT"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Welcome"
        ],
        "description": "This is just a simple welcome Sentence",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/getAllUser": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get All Users from DB",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/getOneUser": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Get One Specific User from DB",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/registerUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Add one User to DB",
        "parameters": [
          {
            "name": "",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "kevin@email.com"
                },
                "name": {
                  "type": "string",
                  "example": "Kevin"
                },
                "age": {
                  "type": "number",
                  "example": 32
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "If Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success!."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "If one of payload is empty",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There is no payload on addUser() in user repository. "
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/practice/user/editTwoUsers": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Edit Two Users at the same time",
        "parameters": [
          {
            "name": "",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "kevin@email.com"
                },
                "name": {
                  "type": "string",
                  "example": "Kevin"
                },
                "age": {
                  "type": "number",
                  "example": 32
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "If Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Success!."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "If one of payload is empty",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "There is no payload on addUser() in user repository. "
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/practice/user/editUserEmail": {
      "patch": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/deleteUser": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/loginUser": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/checkFortID": {
      "patch": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/practice/user/editRankAndPref": {
      "patch": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}